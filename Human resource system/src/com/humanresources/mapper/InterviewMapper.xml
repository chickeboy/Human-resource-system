<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.humanresources.mapper.InterviewMapper">
	<resultMap id="BaseResultMap"
		type="com.humanresources.bean.Interview">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="resumeid" property="resumeid"
			jdbcType="INTEGER" />
		<result column="recruitmentid" property="recruitmentid"
			jdbcType="INTEGER" />
		<result column="interviewtime" property="interviewtime"
			jdbcType="TIMESTAMP" />
		<result column="interview" property="interview"
			jdbcType="INTEGER" />
	</resultMap>

	<resultMap type="com.humanresources.bean.InterviewEx"
		id="Interviewmap">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="resumeid" property="resumeid"
			jdbcType="INTEGER" />
		<result column="recruitmentid" property="recruitmentid"
			jdbcType="INTEGER" />
		<result column="interviewtime" property="interviewtime"
			jdbcType="TIMESTAMP" />
		<result column="interview" property="interview"
			jdbcType="INTEGER" />
		<association property="recruitment" javaType="recruitment">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="time" property="time" jdbcType="TIMESTAMP" />
			<result column="positionid" property="positionid"
				jdbcType="INTEGER" />
		</association>
		<association property="resume" javaType="resume">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="userid" property="userid" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="birthday" property="birthday"
				jdbcType="TIMESTAMP" />
			<result column="age" property="age" jdbcType="INTEGER" />
			<result column="experience" property="experience"
				jdbcType="VARCHAR" />
			<result column="assessment" property="assessment"
				jdbcType="VARCHAR" />
		</association>
		<association property="position" javaType="position">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="position_name" property="name"
				jdbcType="VARCHAR" />
			<result column="creationtime" property="creationtime"
				jdbcType="TIMESTAMP" />
			<result column="departmentid" property="departmentid"
				jdbcType="INTEGER" />
		</association>
		<association property="department" javaType="department">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="department_name" property="name"
				jdbcType="VARCHAR" />
			<result column="creationtime" property="creationtime"
				jdbcType="TIMESTAMP" />
		</association>
	</resultMap>
	<resultMap type="com.humanresources.bean.InterviewEx"
		id="myInterviewmap">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="resumeid" property="resumeid"
			jdbcType="INTEGER" />
		<result column="recruitmentid" property="recruitmentid"
			jdbcType="INTEGER" />
		<result column="interviewtime" property="interviewtime"
			jdbcType="TIMESTAMP" />
		<result column="interview" property="interview"
			jdbcType="INTEGER" />
		<association property="recruitment" javaType="recruitment">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="time" property="time" jdbcType="TIMESTAMP" />
			<result column="positionid" property="positionid"
				jdbcType="INTEGER" />
		</association>
		<association property="resume" javaType="resume">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="userid" property="userid" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="birthday" property="birthday"
				jdbcType="TIMESTAMP" />
			<result column="age" property="age" jdbcType="INTEGER" />
			<result column="experience" property="experience"
				jdbcType="VARCHAR" />
			<result column="assessment" property="assessment"
				jdbcType="VARCHAR" />
		</association>
		<association property="position" javaType="position">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="position_name" property="name"
				jdbcType="VARCHAR" />
			<result column="creationtime" property="creationtime"
				jdbcType="TIMESTAMP" />
			<result column="departmentid" property="departmentid"
				jdbcType="INTEGER" />
		</association>
		<association property="department" javaType="department">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="department_name" property="name"
				jdbcType="VARCHAR" />
			<result column="creationtime" property="creationtime"
				jdbcType="TIMESTAMP" />
		</association>
	</resultMap>





	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, resumeid, recruitmentid, interviewtime, interview
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.humanresources.bean.InterviewExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from interview
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from interview
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="findAllInterviews" resultMap="Interviewmap">
		select interview.*,
		resume.*,
		recruitment.*,
		position.id,
		position.name as position_name,
		position.creationtime,
		position.departmentid,
		department.id,
		department.name as department_name ,
		department.creationtime from
		interview,resume,recruitment,position,department
		where
		interview.resumeid = resume.id
		and interview.recruitmentid =
		recruitment.id
		and recruitment.positionid = position.id
		and
		position.departmentid = department.id
	</select>
	<select id="findmyInterviews" resultMap="myInterviewmap"
		parameterType="java.lang.Integer">
		select interview.*,
		resume.*,
		recruitment.*,
		position.id,
		position.name as position_name,
		position.creationtime,
		position.departmentid,
		department.id,
		department.name as department_name
		,
		department.creationtime from
		interview,resume,recruitment,position,department
		where
		resume.userid = #{id}
		and interview.resumeid = resume.id
		and
		interview.recruitmentid = recruitment.id
		and recruitment.positionid =
		position.id
		and position.departmentid = department.id
	</select>



	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from interview
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.humanresources.bean.InterviewExample">
		delete from interview
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.humanresources.bean.Interview">
		insert into interview (id, resumeid, recruitmentid,
		interviewtime, interview)
		values (#{id,jdbcType=INTEGER},
		#{resumeid,jdbcType=INTEGER},
		#{recruitmentid,jdbcType=INTEGER},
		#{interviewtime,jdbcType=TIMESTAMP}, #{interview,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.humanresources.bean.Interview">
		insert into interview
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="resumeid != null">
				resumeid,
			</if>
			<if test="recruitmentid != null">
				recruitmentid,
			</if>
			<if test="interviewtime != null">
				interviewtime,
			</if>
			<if test="interview != null">
				interview,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="resumeid != null">
				#{resumeid,jdbcType=INTEGER},
			</if>
			<if test="recruitmentid != null">
				#{recruitmentid,jdbcType=INTEGER},
			</if>
			<if test="interviewtime != null">
				#{interviewtime,jdbcType=TIMESTAMP},
			</if>
			<if test="interview != null">
				#{interview,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.humanresources.bean.InterviewExample"
		resultType="java.lang.Integer">
		select count(*) from interview
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update interview
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.resumeid != null">
				resumeid = #{record.resumeid,jdbcType=INTEGER},
			</if>
			<if test="record.recruitmentid != null">
				recruitmentid = #{record.recruitmentid,jdbcType=INTEGER},
			</if>
			<if test="record.interviewtime != null">
				interviewtime =
				#{record.interviewtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.interview != null">
				interview = #{record.interview,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update interview
		set id = #{record.id,jdbcType=INTEGER},
		resumeid =
		#{record.resumeid,jdbcType=INTEGER},
		recruitmentid =
		#{record.recruitmentid,jdbcType=INTEGER},
		interviewtime =
		#{record.interviewtime,jdbcType=TIMESTAMP},
		interview =
		#{record.interview,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.humanresources.bean.Interview">
		update interview
		<set>
			<if test="resumeid != null">
				resumeid = #{resumeid,jdbcType=INTEGER},
			</if>
			<if test="recruitmentid != null">
				recruitmentid = #{recruitmentid,jdbcType=INTEGER},
			</if>
			<if test="interviewtime != null">
				interviewtime = #{interviewtime,jdbcType=TIMESTAMP},
			</if>
			<if test="interview != null">
				interview = #{interview,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.humanresources.bean.Interview">
		update interview
		set resumeid =
		#{resumeid,jdbcType=INTEGER},
		recruitmentid =
		#{recruitmentid,jdbcType=INTEGER},
		interviewtime =
		#{interviewtime,jdbcType=TIMESTAMP},
		interview =
		#{interview,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>